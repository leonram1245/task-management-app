name: Backend CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: 📦 Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: 🧪 Run unit tests
        working-directory: ./backend
        run: npm test -- --ci --passWithNoTests

      - name: 🔐 Write EC2 SSH key
        run: |
          echo "🔐 Writing EC2 SSH private key to ~/.ssh/id_rsa..."
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "✅ SSH key written."

      - name: 📤 Upload backend code to EC2 via rsync
        run: |
          echo "📡 Running rsync from ./backend..."
          cd backend
          rsync -avz --exclude 'node_modules' --exclude '.git' --exclude '.env' \
            -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" \
            . ubuntu@${{ secrets.EC2_HOST }}:~/app
          echo "✅ rsync upload complete."

      - name: 🚀 Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "📂 Switching to /home/ubuntu/app..."
            cd /home/ubuntu/app || { echo "❌ /home/ubuntu/app not found"; exit 1; }

            echo "📝 Creating .env file..."
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

            echo "🛑 Stopping existing container..."
            docker stop task-app-management || true

            echo "🗑️ Removing old container..."
            docker rm task-app-management || true

            echo "🐳 Building Docker image..."
            docker build -t task-management-app . || { echo "❌ Docker build failed"; exit 1; }

            echo "🚀 Running new Docker container..."
            docker run -d --env-file .env -p 3001:80 --name task-app-management task-management-app || { echo "❌ Docker run failed"; exit 1; }

            echo "✅ Backend deployed successfully."
